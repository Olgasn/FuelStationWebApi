// <auto-generated />
using FuelStationWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using System;

namespace FuelStationWebApi.Migrations
{
    [DbContext(typeof(FuelsContext))]
    partial class FuelsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("FuelStationWebApi.Models.Fuel", b =>
                {
                    b.Property<int>("FuelID")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("FuelDensity");

                    b.Property<string>("FuelType");

                    b.HasKey("FuelID");

                    b.ToTable("Fuels");
                });

            modelBuilder.Entity("FuelStationWebApi.Models.Operation", b =>
                {
                    b.Property<int>("OperationID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int>("FuelID");

                    b.Property<float?>("Inc_Exp");

                    b.Property<int>("TankID");

                    b.HasKey("OperationID");

                    b.HasIndex("FuelID");

                    b.HasIndex("TankID");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("FuelStationWebApi.Models.Tank", b =>
                {
                    b.Property<int>("TankID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TankMaterial");

                    b.Property<string>("TankPicture");

                    b.Property<string>("TankType");

                    b.Property<float>("TankVolume");

                    b.Property<float>("TankWeight");

                    b.HasKey("TankID");

                    b.ToTable("Tanks");
                });

            modelBuilder.Entity("FuelStationWebApi.Models.Operation", b =>
                {
                    b.HasOne("FuelStationWebApi.Models.Fuel", "Fuel")
                        .WithMany("Operations")
                        .HasForeignKey("FuelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FuelStationWebApi.Models.Tank", "Tank")
                        .WithMany("Operations")
                        .HasForeignKey("TankID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
